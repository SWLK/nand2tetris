// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux (a=a[0],b=b[0],sel=sel[0],out=abMux0);
	Mux (a=c[0],b=d[0],sel=sel[0],out=cdMux0);
	Mux (a=abMux0,b=cdMux0,sel=sel[1],out=out[0]);

	Mux (a=a[1],b=b[1],sel=sel[0],out=abMux1);
	Mux (a=c[1],b=d[1],sel=sel[0],out=cdMux1);
	Mux (a=abMux1,b=cdMux1,sel=sel[1],out=out[1]);

	Mux (a=a[2],b=b[2],sel=sel[0],out=abMux2);
	Mux (a=c[2],b=d[2],sel=sel[0],out=cdMux2);
	Mux (a=abMux2,b=cdMux2,sel=sel[1],out=out[2]);

	Mux (a=a[3],b=b[3],sel=sel[0],out=abMux3);
	Mux (a=c[3],b=d[3],sel=sel[0],out=cdMux3);
	Mux (a=abMux3,b=cdMux3,sel=sel[1],out=out[3]);

	Mux (a=a[4],b=b[4],sel=sel[0],out=abMux4);
	Mux (a=c[4],b=d[4],sel=sel[0],out=cdMux4);
	Mux (a=abMux4,b=cdMux4,sel=sel[1],out=out[4]);

	Mux (a=a[5],b=b[5],sel=sel[0],out=abMux5);
	Mux (a=c[5],b=d[5],sel=sel[0],out=cdMux5);
	Mux (a=abMux5,b=cdMux5,sel=sel[1],out=out[5]);

	Mux (a=a[6],b=b[6],sel=sel[0],out=abMux6);
	Mux (a=c[6],b=d[6],sel=sel[0],out=cdMux6);
	Mux (a=abMux6,b=cdMux6,sel=sel[1],out=out[6]);

	Mux (a=a[7],b=b[7],sel=sel[0],out=abMux7);
	Mux (a=c[7],b=d[7],sel=sel[0],out=cdMux7);
	Mux (a=abMux7,b=cdMux7,sel=sel[1],out=out[7]);

	Mux (a=a[8],b=b[8],sel=sel[0],out=abMux8);
	Mux (a=c[8],b=d[8],sel=sel[0],out=cdMux8);
	Mux (a=abMux8,b=cdMux8,sel=sel[1],out=out[8]);

	Mux (a=a[9],b=b[9],sel=sel[0],out=abMux9);
	Mux (a=c[9],b=d[9],sel=sel[0],out=cdMux9);
	Mux (a=abMux9,b=cdMux9,sel=sel[1],out=out[9]);

	Mux (a=a[10],b=b[10],sel=sel[0],out=abMux10);
	Mux (a=c[10],b=d[10],sel=sel[0],out=cdMux10);
	Mux (a=abMux10,b=cdMux10,sel=sel[1],out=out[10]);

	Mux (a=a[11],b=b[11],sel=sel[0],out=abMux11);
	Mux (a=c[11],b=d[11],sel=sel[0],out=cdMux11);
	Mux (a=abMux11,b=cdMux11,sel=sel[1],out=out[11]);

	Mux (a=a[12],b=b[12],sel=sel[0],out=abMux12);
	Mux (a=c[12],b=d[12],sel=sel[0],out=cdMux12);
	Mux (a=abMux12,b=cdMux12,sel=sel[1],out=out[12]);

	Mux (a=a[13],b=b[13],sel=sel[0],out=abMux13);
	Mux (a=c[13],b=d[13],sel=sel[0],out=cdMux13);
	Mux (a=abMux13,b=cdMux13,sel=sel[1],out=out[13]);

	Mux (a=a[14],b=b[14],sel=sel[0],out=abMux14);
	Mux (a=c[14],b=d[14],sel=sel[0],out=cdMux14);
	Mux (a=abMux14,b=cdMux14,sel=sel[1],out=out[14]);

	Mux (a=a[15],b=b[15],sel=sel[0],out=abMux15);
	Mux (a=c[15],b=d[15],sel=sel[0],out=cdMux15);
	Mux (a=abMux15,b=cdMux15,sel=sel[1],out=out[15]);
}
